{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "tvaritElb": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Subnets": {
          "Ref": "publicSubnets"
        },
        "HealthCheck": {
          "HealthyThreshold": "10",
          "Interval": "30",
          "Target": {
            "Fn::Join": [
              "",
              [
                "HTTP:8080",
                {
                  "Ref": "healthCheckAbsoluteUrl"
                }
              ]
            ]
          },
          "Timeout": "5",
          "UnhealthyThreshold": "2"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "300"
        },
        "ConnectionSettings": {
          "IdleTimeout": "60"
        },
        "CrossZone": "true",
        "SecurityGroups": [
          {
            "Ref": "sgTvaritElb"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "8080",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP",
            "InstanceProtocol": "HTTP"
          }
        ]
      }
    },
    "tvaritAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": {
          "Ref": "availabilityZones"
        },
        "Cooldown": "300",
        "DesiredCapacity": "0",
        "HealthCheckGracePeriod": "300",
        "HealthCheckType": "ELB",
        "MaxSize": "0",
        "MinSize": "0",
        "VPCZoneIdentifier": {
          "Ref": "publicSubnets"
        },
        "LaunchConfigurationName": {
          "Ref": "lctvaritlc"
        },
        "LoadBalancerNames": [
          {
            "Ref": "tvaritElb"
          }
        ],
        "TerminationPolicies": [
          "Default"
        ]
      }
    },
    "lctvaritlc": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": "ami-0c6f5f64",
        "InstanceType": "t2.micro",
        "KeyName": "trelair",
        "IamInstanceProfile": {
          "Ref": "tvaritRole"
        },
        "SecurityGroups": [
          {
            "Ref": "sgtvaritappserver"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 8
            }
          }
        ]
      }
    },
    "sgtvaritappserver": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "sg for tvarit app servers",
        "VpcId": {
          "Ref": "vpc"
        }
      }
    },
    "sgTvaritElb": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "tvarit elb security group",
        "VpcId": {
          "Ref": "vpc"
        }
      }
    },
    "scalingDecreaseGroupSize": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "ScalingAdjustment": "-1",
        "AutoScalingGroupName": {
          "Ref": "tvaritAutoScalingGroup"
        }
      }
    },
    "scalingIncreaseGroupSize": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "ScalingAdjustment": "1",
        "AutoScalingGroupName": {
          "Ref": "tvaritAutoScalingGroup"
        }
      }
    },
    "alarmtvarithighcpumark": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "70.0",
        "AlarmActions": [
          {
            "Ref": "scalingIncreaseGroupSize"
          }
        ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": "tvaritAutoScalingGroup"
          }
        ]
      }
    },
    "alarmtvaritlowcpumark": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "20.0",
        "AlarmActions": [
          {
            "Ref": "scalingDecreaseGroupSize"
          }
        ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": "tvaritAutoScalingGroup"
          }
        ]
      }
    },
    "ingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgtvaritappserver"
        },
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "SourceSecurityGroupId": {
          "Ref": "sgTvaritElb"
        },
        "SourceSecurityGroupOwnerId": "085224677438"
      }
    },
    "ingress2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTvaritElb"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgtvaritappserver"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTvaritElb"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Parameters": {
    "projectName": {
      "Type": "String",
      "Description": "Enter a name for your project. This will be used as part of resource names and tags.",
      "AllowedPattern": "[A-Za-z]*",
      "MinLength": "1"
    },
    "publicSubnets": {
      "Type": "CommaDelimitedList",
      "Description": "Enter exactly 2 subnet ids that are publicly accessible. ELBs and app servers will be placed in these two subnets."
    },
    "healthCheckAbsoluteUrl": {
      "Type": "String",
      "Description": "Enter the health check absolute url for the app servers. "
    },
    "availabilityZones": {
      "Type": "CommaDelimitedList",
      "Description": "Enter exactly 2 availability zone ids where the ELBs and app servers will be deployed."
    },
    "vpc": {
      "Type": "String",
      "Description": "Enter the vpc id where app will be deployed."
    },
    "tvaritRole": {
      "Type": "String",
      "Description": "The IAM role that will be used for all tvarit instances."
    }
  },
  "Description": ""
}
